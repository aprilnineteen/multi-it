<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Target: 핵심로직 빈 -->
	<bean id="boardService" class="ex02.BoardServiceImpl"/>
	
	<!-- Aspect: 공통관심 빈 -->
	<bean id="commonAdvice" class="ex02.CommonAspect"/>
	
	<aop:config>
		<aop:aspect ref="commonAdvice">
		<!--포인트컷 표현식 : execution(수식어패턴? 리턴타입 패키지패턴?이름패턴(파라미터패턴)
		* : 모든 것이 올 수 있다 .. : 0개 이상 올 수 있다. -->
		<aop:pointcut expression="execution(* ex02.BoardServiceImpl.insertBoard(..))" id="point1"/>
		<!-- [1] BEFORE: 메서드가 호출되기 전에 공통관심사항이 적용된다 -->
		<!-- <aop:before method="trace1" pointcut-ref="point1"/> -->
		<!-- [2] AFTER: 메서드가 호출된 후에 적용. 메서드 정상 실행 또는 예외 발생 여부와 상관없이 적용 -->
		<!-- <aop:after method="trace2" pointcut-ref="point1"/> -->
		
		<!-- [3] AFTER RETURNING: 메서드가 정상적으로 실행된 후에 적용된다. -->
		<!-- <aop:after-returning method="trace3" pointcut-ref="point1" returning="result"/> -->
 		
		<!-- [4] AFTER THROWING: 메서드 실행 중 예외가 발생됐을 때 적용된다. -->
		<!-- <aop:after-throwing method="trace4" pointcut-ref="point1" throwing="ex"/> -->
 		
 		<!-- [5] AROUND : 메서드 호출 전, 후, 예외 발생 등 모든 시점에 적용 가능 -->
 			<aop:around method="trace5" pointcut-ref="point1" />
 		</aop:aspect>
	</aop:config>
</beans>
